from telethon.sync import TelegramClient
from telethon.tl.functions.messages import GetDialogFiltersRequest
from telethon.tl.types import DialogFilter, DialogFilterChatlist
from datetime import datetime, timedelta
from dotenv import load_dotenv
import time
import os

load_dotenv()
api_hash = os.getenv("API_HASH")
api_id = int(os.getenv("API_ID"))
session_name = 'user_session'

client = TelegramClient(session_name, api_id, api_hash)
client.start()


def get_chat_folders():
    result = client(GetDialogFiltersRequest())
    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å–ø–∏—Å–æ–∫ (—Ñ—ñ–ª—å—Ç—Ä, –Ω–∞–∑–≤–∞ –ø–∞–ø–∫–∏)
    folders = []
    for f in result.filters:
        # –î–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∑ –Ω–∞–∑–≤–æ—é (DialogFilterChatlist)
        if isinstance(f, DialogFilterChatlist):
            folders.append((f, f.title.text))
    return folders


def get_chats_from_folder(folder):
    chat_ids = []
    for peer in folder.include_peers:
        try:
            entity = client.get_entity(peer)
            chat_ids.append(entity.id)
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —á–∞—Ç –∑ peer {peer}: {e}")
    return chat_ids


def prompt_folder_selection(folders):
    print("\nüîñ –î–æ—Å—Ç—É–ø–Ω—ñ –ø–∞–ø–∫–∏:")
    for idx, (_, title) in enumerate(folders, 1):
        print(f"{idx}: {title}")

    selected = input("\n–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä–∏ –ø–∞–ø–æ–∫ –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ (—á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª): ").strip().split()
    indices = []
    for s in selected:
        try:
            idx = int(s) - 1
            if 0 <= idx < len(folders):
                indices.append(idx)
        except:
            continue
    return [folders[i] for i in indices]


def get_message_for_folder(folder_title):
    print(f"\n‚úâÔ∏è –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –ø–∞–ø–∫–∏ '{folder_title}':")
    return input("> ").strip()


def get_cooldown_for_folder(folder_title):
    while True:
        try:
            cooldown = int(input(f"‚è± –í–≤–µ–¥–∏ cooldown (–≤ —Ö–≤–∏–ª–∏–Ω–∞—Ö) –¥–ª—è '{folder_title}': ").strip())
            return cooldown
        except:
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑.")


def start_global_loop_multiple(folder_tasks):
    last_sent_times = {}  # chat_id -> datetime
    print("\nüöÄ –ü–æ—á–∏–Ω–∞—î–º–æ —Ä–æ–∑—Å–∏–ª–∫—É... –Ω–∞—Ç–∏—Å–Ω–∏ Ctrl+C —â–æ–± –∑—É–ø–∏–Ω–∏—Ç–∏")

    while True:
        now = datetime.now()

        for folder_title, chats, message, cooldown in folder_tasks:
            for chat_id in chats:
                last_time = last_sent_times.get(chat_id)
                cooldown_passed = not last_time or now - last_time >= timedelta(minutes=cooldown)

                if cooldown_passed:
                    try:
                        client.send_message(chat_id, message)
                        last_sent_times[chat_id] = now
                        print(f"[{now.strftime('%H:%M:%S')}] ‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –¥–æ {chat_id} ({folder_title})")
                    except Exception as e:
                        print(f"[{now.strftime('%H:%M:%S')}] ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤ {chat_id}: {e}")
                else:
                    remaining = (timedelta(minutes=cooldown) - (now - last_time)).seconds // 60
                    print(f"[{now.strftime('%H:%M:%S')}] ‚è≥ –ß–∞—Ç {chat_id} ({folder_title}) –≤ cooldown ({remaining} —Ö–≤ –∑–∞–ª–∏—à–∏–ª–æ—Å—å)")

        print("\nüïê –ß–µ–∫–∞—î–º–æ 1 —Ö–≤–∏–ª–∏–Ω—É –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é...\n")
        time.sleep(60)


def main():
    print("üìÇ –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ Telegram...")
    folders = get_chat_folders()

    if not folders:
        print("‚ùå –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–∞–ø–æ–∫.")
        return

    selected_folders = prompt_folder_selection(folders)
    if not selected_folders:
        print("‚ùå –ñ–æ–¥–Ω–∞ –ø–∞–ø–∫–∞ –Ω–µ –æ–±—Ä–∞–Ω–∞ –∞–±–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è.")
        return

    folder_tasks = []

    for folder, folder_title in selected_folders:
        chats = get_chats_from_folder(folder)
        if not chats:
            print(f"‚ö†Ô∏è –£ –ø–∞–ø—Ü—ñ '{folder_title}' –Ω–µ–º–∞—î —á–∞—Ç—ñ–≤.")
            continue

        message = get_message_for_folder(folder_title)
        cooldown = get_cooldown_for_folder(folder_title)
        folder_tasks.append((folder_title, chats, message, cooldown))

    if not folder_tasks:
        print("‚ùå –ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö —á–∞—Ç—ñ–≤ –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏.")
        return

    start_global_loop_multiple(folder_tasks)


if __name__ == '__main__':
    main()
